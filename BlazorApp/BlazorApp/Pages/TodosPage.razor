@page "/{ListId:long}"
@inject TodosViewModel vm

@if (vm.List == null)
{
    <h3>Loading...</h3>
}
else
{
    <h3>@vm.List.Name</h3>
    <Card Size="small" BodyStyle="display: flex; flex-direction: row; align-items: center;">
        <Button Icon="plus">
        </Button>
        <Input placeholder="What should I do? (press Enter)" @bind-Value="vm.NewTodo" @onkeydown="onKeyPressed"/>
    </Card>
    @foreach (var todo in vm.List.Todos)
    {
        <Card Size="small" BodyStyle="display: flex; flex-direction: row; align-items: center;">
                <Button @onclick="@(() => vm.ChangeDone(todo))" Icon="@(todo.Done?"check":" ")" />
                <div class="todo-body">
                    <div class="todo-row">
                        <Icon Type="star" Theme="outline" Style="font-size:1.5em;" @onclick="@(() => vm.ChangeImportant(todo))"/>
                        <span Style="font-size:1.5em;" @onclick="@(()=>vm.ChangeSelected(todo))">@todo.Title</span>
                    </div>
                    <div class="todo-row">
                        <Icon Type="calendar" Theme="outline" />
                        <span><Text>@todo.DeadLine?.ToString("yyyy.MM.dd.")</Text></span>
                    </div>
                    
                </div>
        </Card>
    }
    @if (vm.Selected != null)
    {
    <Drawer Visible="@(vm.Selected != null)" Closable="true" OnClose="@(() => vm.ChangeSelected(null))">
        <h4>@vm.Selected.Title</h4>
        <div>@vm.Selected.Description</div>
    </Drawer>
    }
}

<style>
    .todo-body {
        display: flex;
        flex-direction: column;
        padding: 0px 0px 0px 8px;
    }

    .todo-title{
        font-size : medium
    }

    .todo-row{
        display: flex;
        flex-direction: row;
        align-items: center;
    }


</style>

@code {
    [Parameter]
    public long ListId { get; set; }

    public string NewTodo { get; set; }


    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected async override Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        await vm.Load(ListId);

    }

    public async Task onKeyPressed(KeyboardEventArgs e)
    {
        if(e.Key == "Enter")
        {
            await vm.AddTodo();
        }
    }

}
