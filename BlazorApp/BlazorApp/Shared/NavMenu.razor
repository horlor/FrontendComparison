@inject ApiService service

<Menu Theme="MenuTheme.Light" Mode="MenuMode.Inline" >
    @if (lists == null)
    {
        <span>Loading...</span>
    }
    else
    {
        @foreach (var list in lists)
        {
            <MenuItem Key="@list.Id.ToString()" RouterLink="@list.Id.ToString()" >
                <Icon Type=@(list.Id == "important"?"star":list.Id=="urgent"?"calendar":list.Id=="general"?"block":"unordered-list") Theme="outline" />
                <span class="nav-text">@list.Name</span>
            </MenuItem>
        }
        <MenuItem Key="add" OnClick="()=>openAddDialog=true">
            <Icon Type="plus" Theme="outline" />
            <span class="nav-text">Add list</span>
        </MenuItem>
    }
</Menu>
<Modal
    Title="Adding new list"
    Visible="@openAddDialog"
    OnOk="handleOk"
    OnCancel="handleCancel"
    >
    <Input @bind-Value="newTitle" Class="inputField" />
</Modal>

@code {
    private ICollection<ListDto> lists;

    protected async override Task OnInitializedAsync()
    {
        lists = await service.GetLists();
        await base.OnInitializedAsync();
    }

    private bool collapseNavMenu = true;

    private bool openAddDialog = false;

    private string newTitle;

    private async Task handleOk()
    {
        var ret = await service.AddList(new ListDto()
        {
            Name = newTitle
        });
        openAddDialog = false;
        newTitle = null;
        lists.Add(ret);
    }

    private void handleCancel()
    {
        openAddDialog = false;
    }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
